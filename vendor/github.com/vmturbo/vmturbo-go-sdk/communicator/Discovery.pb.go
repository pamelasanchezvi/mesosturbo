// Code generated by protoc-gen-go.
// source: Discovery.proto
// DO NOT EDIT!

package communicator

import (
	"github.com/vmturbo/vmturbo-go-sdk/sdk"

	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type AccountDefEntry_AccountDefEntryType int32

const (
	AccountDefEntry_OPTIONAL  AccountDefEntry_AccountDefEntryType = 0
	AccountDefEntry_MANDATORY AccountDefEntry_AccountDefEntryType = 1
)

var AccountDefEntry_AccountDefEntryType_name = map[int32]string{
	0: "OPTIONAL",
	1: "MANDATORY",
}
var AccountDefEntry_AccountDefEntryType_value = map[string]int32{
	"OPTIONAL":  0,
	"MANDATORY": 1,
}

func (x AccountDefEntry_AccountDefEntryType) Enum() *AccountDefEntry_AccountDefEntryType {
	p := new(AccountDefEntry_AccountDefEntryType)
	*p = x
	return p
}
func (x AccountDefEntry_AccountDefEntryType) String() string {
	return proto.EnumName(AccountDefEntry_AccountDefEntryType_name, int32(x))
}
func (x *AccountDefEntry_AccountDefEntryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountDefEntry_AccountDefEntryType_value, data, "AccountDefEntry_AccountDefEntryType")
	if err != nil {
		return err
	}
	*x = AccountDefEntry_AccountDefEntryType(value)
	return nil
}

// Entry type
type AccountDefEntry_AccountDefEntryFieldType int32

const (
	AccountDefEntry_STRING      AccountDefEntry_AccountDefEntryFieldType = 0
	AccountDefEntry_GROUP_SCOPE AccountDefEntry_AccountDefEntryFieldType = 1
)

var AccountDefEntry_AccountDefEntryFieldType_name = map[int32]string{
	0: "STRING",
	1: "GROUP_SCOPE",
}
var AccountDefEntry_AccountDefEntryFieldType_value = map[string]int32{
	"STRING":      0,
	"GROUP_SCOPE": 1,
}

func (x AccountDefEntry_AccountDefEntryFieldType) Enum() *AccountDefEntry_AccountDefEntryFieldType {
	p := new(AccountDefEntry_AccountDefEntryFieldType)
	*p = x
	return p
}
func (x AccountDefEntry_AccountDefEntryFieldType) String() string {
	return proto.EnumName(AccountDefEntry_AccountDefEntryFieldType_name, int32(x))
}
func (x *AccountDefEntry_AccountDefEntryFieldType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountDefEntry_AccountDefEntryFieldType_value, data, "AccountDefEntry_AccountDefEntryFieldType")
	if err != nil {
		return err
	}
	*x = AccountDefEntry_AccountDefEntryFieldType(value)
	return nil
}

type ErrorDTO_ErrorSeverity int32

const (
	ErrorDTO_CRITICAL ErrorDTO_ErrorSeverity = 0
	ErrorDTO_WARNING  ErrorDTO_ErrorSeverity = 1
)

var ErrorDTO_ErrorSeverity_name = map[int32]string{
	0: "CRITICAL",
	1: "WARNING",
}
var ErrorDTO_ErrorSeverity_value = map[string]int32{
	"CRITICAL": 0,
	"WARNING":  1,
}

func (x ErrorDTO_ErrorSeverity) Enum() *ErrorDTO_ErrorSeverity {
	p := new(ErrorDTO_ErrorSeverity)
	*p = x
	return p
}
func (x ErrorDTO_ErrorSeverity) String() string {
	return proto.EnumName(ErrorDTO_ErrorSeverity_name, int32(x))
}
func (x *ErrorDTO_ErrorSeverity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorDTO_ErrorSeverity_value, data, "ErrorDTO_ErrorSeverity")
	if err != nil {
		return err
	}
	*x = ErrorDTO_ErrorSeverity(value)
	return nil
}

// ValidateResponse is the response of a ValidateRequest message.
// It contains the response, and any errors encountered during the target validation attempt.
type ValidationResponse struct {
	// Errors, discovered during external probe operation
	ErrorDTO         []*ErrorDTO `protobuf:"bytes,1,rep,name=errorDTO" json:"errorDTO,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ValidationResponse) Reset()         { *m = ValidationResponse{} }
func (m *ValidationResponse) String() string { return proto.CompactTextString(m) }
func (*ValidationResponse) ProtoMessage()    {}

func (m *ValidationResponse) GetErrorDTO() []*ErrorDTO {
	if m != nil {
		return m.ErrorDTO
	}
	return nil
}

// Mediation container response for target discovery request. Holds both errors and discovered
// entities. If errors occurred, any entities can be sent nevertheless. Only those entities should
// be updated in the operations manager.
//
// Errors do not prevent anything. They are just displayed to users in the UI
type DiscoveryResponse struct {
	// Errors, discovered during external probe operation
	ErrorDTO []*ErrorDTO `protobuf:"bytes,1,rep,name=errorDTO" json:"errorDTO,omitempty"`
	// Entities, discovered by external probe.
	EntityDTO []*sdk.EntityDTO `protobuf:"bytes,2,rep,name=entityDTO" json:"entityDTO,omitempty"`
	// Constraints defined in external probe
	DiscoveredGroup []*sdk.GroupDTO `protobuf:"bytes,3,rep,name=discoveredGroup" json:"discoveredGroup,omitempty"`
	// ServiceEntityProfile (template)
	EntityProfile []*sdk.EntityProfileDTO `protobuf:"bytes,4,rep,name=entityProfile" json:"entityProfile,omitempty"`
	// Deployment Profile (ServiceCatalogItem)
	DeploymentProfile []*sdk.DeploymentProfileDTO `protobuf:"bytes,5,rep,name=deploymentProfile" json:"deploymentProfile,omitempty"`
	// Notifications for global (not entity-specific) events
	Notification     []*sdk.NotificationDTO `protobuf:"bytes,6,rep,name=notification" json:"notification,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *DiscoveryResponse) Reset()         { *m = DiscoveryResponse{} }
func (m *DiscoveryResponse) String() string { return proto.CompactTextString(m) }
func (*DiscoveryResponse) ProtoMessage()    {}

func (m *DiscoveryResponse) GetErrorDTO() []*ErrorDTO {
	if m != nil {
		return m.ErrorDTO
	}
	return nil
}

func (m *DiscoveryResponse) GetEntityDTO() []*sdk.EntityDTO {
	if m != nil {
		return m.EntityDTO
	}
	return nil
}

func (m *DiscoveryResponse) GetDiscoveredGroup() []*sdk.GroupDTO {
	if m != nil {
		return m.DiscoveredGroup
	}
	return nil
}

func (m *DiscoveryResponse) GetEntityProfile() []*sdk.EntityProfileDTO {
	if m != nil {
		return m.EntityProfile
	}
	return nil
}

func (m *DiscoveryResponse) GetDeploymentProfile() []*sdk.DeploymentProfileDTO {
	if m != nil {
		return m.DeploymentProfile
	}
	return nil
}

func (m *DiscoveryResponse) GetNotification() []*sdk.NotificationDTO {
	if m != nil {
		return m.Notification
	}
	return nil
}

// The AccountDefinitionEntry class defines a single field that is part of the account credentials
// a user must specify to connect to a target of this probe type. Note that for every probe, the
// 'TARGET_IDENTIFIER' is a mandatory field.
//
// It's the responsibility of your probe to define the credentials it needs to attach to a target. When adding an associated target to
// Operations Manager via the REST API, the API call includes parameters for each of the credentials defined here.
// When attaching via the Operations Manager GUI, the credentials defined here appear in the GUI as individual fields.
// For a given probe, you define the credentials as a Set of AccountDefinitionEntry objects.
type AccountDefEntry struct {
	// The name of this entry field. The name must be unique for all of the entries you
	// define for this probe.
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// The display name of this entry. This is the name that appears in the user interface.
	DisplayName *string `protobuf:"bytes,2,req,name=displayName" json:"displayName,omitempty"`
	// Optional description of what this entry represents.
	Description *string `protobuf:"bytes,3,req,name=description" json:"description,omitempty"`
	// A regular expression to validate a field. If the user's input matches the
	// regular expression, then the entry is valid.
	// For example, you can validate that the entered text is only numbers and period characters
	// for an IP address. To disable validation (allow any text), pass {@code ".*"}.
	VerificationRegex *string `protobuf:"bytes,4,opt,name=verificationRegex,def=.*" json:"verificationRegex,omitempty"`
	// Entry type
	Type *AccountDefEntry_AccountDefEntryType `protobuf:"varint,5,opt,name=type,enum=common_dto.AccountDefEntry_AccountDefEntryType,def=1" json:"type,omitempty"`
	// Specifies if the value for the entry can be disclosed (in the log file or wherever else).
	IsSecret *bool `protobuf:"varint,6,opt,name=isSecret,def=0" json:"isSecret,omitempty"`
	// Field type
	FieldType *AccountDefEntry_AccountDefEntryFieldType `protobuf:"varint,7,opt,name=fieldType,enum=common_dto.AccountDefEntry_AccountDefEntryFieldType,def=0" json:"fieldType,omitempty"`
	// Set of entity properties (e.g. IP addresses) for group scope target discovery
	GroupScopePropertySet *AccountDefEntry_GroupScopePropertySet `protobuf:"bytes,8,opt,name=groupScopePropertySet" json:"groupScopePropertySet,omitempty"`
	XXX_unrecognized      []byte                                 `json:"-"`
}

func (m *AccountDefEntry) Reset()         { *m = AccountDefEntry{} }
func (m *AccountDefEntry) String() string { return proto.CompactTextString(m) }
func (*AccountDefEntry) ProtoMessage()    {}

const Default_AccountDefEntry_VerificationRegex string = ".*"
const Default_AccountDefEntry_Type AccountDefEntry_AccountDefEntryType = AccountDefEntry_MANDATORY
const Default_AccountDefEntry_IsSecret bool = false
const Default_AccountDefEntry_FieldType AccountDefEntry_AccountDefEntryFieldType = AccountDefEntry_STRING

func (m *AccountDefEntry) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AccountDefEntry) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *AccountDefEntry) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *AccountDefEntry) GetVerificationRegex() string {
	if m != nil && m.VerificationRegex != nil {
		return *m.VerificationRegex
	}
	return Default_AccountDefEntry_VerificationRegex
}

func (m *AccountDefEntry) GetType() AccountDefEntry_AccountDefEntryType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_AccountDefEntry_Type
}

func (m *AccountDefEntry) GetIsSecret() bool {
	if m != nil && m.IsSecret != nil {
		return *m.IsSecret
	}
	return Default_AccountDefEntry_IsSecret
}

func (m *AccountDefEntry) GetFieldType() AccountDefEntry_AccountDefEntryFieldType {
	if m != nil && m.FieldType != nil {
		return *m.FieldType
	}
	return Default_AccountDefEntry_FieldType
}

func (m *AccountDefEntry) GetGroupScopePropertySet() *AccountDefEntry_GroupScopePropertySet {
	if m != nil {
		return m.GroupScopePropertySet
	}
	return nil
}

// Entity type with a set of properties for group scope account definition
type AccountDefEntry_GroupScopePropertySet struct {
	// Entity type
	EntityType *sdk.EntityDTO_EntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	// Set of property names
	PropertyName     []string `protobuf:"bytes,2,rep,name=propertyName" json:"propertyName,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AccountDefEntry_GroupScopePropertySet) Reset()         { *m = AccountDefEntry_GroupScopePropertySet{} }
func (m *AccountDefEntry_GroupScopePropertySet) String() string { return proto.CompactTextString(m) }
func (*AccountDefEntry_GroupScopePropertySet) ProtoMessage()    {}

func (m *AccountDefEntry_GroupScopePropertySet) GetEntityType() sdk.EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return sdk.EntityDTO_SWITCH
}

func (m *AccountDefEntry_GroupScopePropertySet) GetPropertyName() []string {
	if m != nil {
		return m.PropertyName
	}
	return nil
}

// Error DTO. Represent some errors, occurred during operations inside the Mediation Container.
type ErrorDTO struct {
	// Error severity. Used to specify the colour of the message, shown to the end user.
	Severity *ErrorDTO_ErrorSeverity `protobuf:"varint,1,req,name=severity,enum=common_dto.ErrorDTO_ErrorSeverity" json:"severity,omitempty"`
	// Error description. Should not be null.
	Description *string `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	// UUID of the entity the error is related to, if any.
	EntityUuid *string `protobuf:"bytes,3,opt,name=entityUuid" json:"entityUuid,omitempty"`
	// Type of the entity the error is related to, if any.
	EntityType       *string `protobuf:"bytes,4,opt,name=entityType" json:"entityType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ErrorDTO) Reset()         { *m = ErrorDTO{} }
func (m *ErrorDTO) String() string { return proto.CompactTextString(m) }
func (*ErrorDTO) ProtoMessage()    {}

func (m *ErrorDTO) GetSeverity() ErrorDTO_ErrorSeverity {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return ErrorDTO_CRITICAL
}

func (m *ErrorDTO) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ErrorDTO) GetEntityUuid() string {
	if m != nil && m.EntityUuid != nil {
		return *m.EntityUuid
	}
	return ""
}

func (m *ErrorDTO) GetEntityType() string {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return ""
}

func init() {
	proto.RegisterEnum("common_dto.AccountDefEntry_AccountDefEntryType", AccountDefEntry_AccountDefEntryType_name, AccountDefEntry_AccountDefEntryType_value)
	proto.RegisterEnum("common_dto.AccountDefEntry_AccountDefEntryFieldType", AccountDefEntry_AccountDefEntryFieldType_name, AccountDefEntry_AccountDefEntryFieldType_value)
	proto.RegisterEnum("common_dto.ErrorDTO_ErrorSeverity", ErrorDTO_ErrorSeverity_name, ErrorDTO_ErrorSeverity_value)
}
